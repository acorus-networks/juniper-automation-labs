protocols {

  bgp {

    {% for peer in peers %}
    replace:
    group ipv4-{{ peer.name }} {
      description "IPV4 AS{{ peer.name }}"
      type internal;

      family inet {
        unicast;
      }

      local-as 65500;
      local-address {{ peer.local_ipv4 }};
      advertise-inactive;

      neighbor {{ peer.neighbor_ipv4  }};

      import ipv4-{{ peer.name }};
      export send-static;

    }
    {% endfor %}
  }
}


policy-options {

  {% for peer in peers %}
  replace:
  policy-statement ipv4-{{ peer.name }} {

    {% if (transit_filtered_prefixes is defined) and (transit_filtered_prefixes[peer.asn] is defined) and (transit_filtered_prefixes[peer.asn]['ipv4'] is defined) and ((transit_filtered_prefixes[peer.asn]['ipv4']|length ) > 0) %}

    term accepted {
      from {
        {% for prefix in transit_filtered_prefixes[peer.asn]['ipv4'] %}
          route-filter {{ prefix }} exact;
        {% endfor %}
      }
      then accept;
    }
    term other {
      then reject;
    }
    {% else %}
    then accept;
    {% endif %}

  }
  {% endfor %}

  policy-statement send-static {
        term 1 {
            from protocol static;
            then accept;
        }
    }
}

{% if ansible_host == 'vqfx1' %}
{% set prefix = "1.0.0.0/8" %}
{% elif ansible_host == 'vqfx2' -%}
{% set prefix = "2.0.0.0/8" %}
{% elif ansible_host == 'vqfx3' -%}
{% set prefix = "3.0.0.0/8" %}
{% endif %}

routing-options {
    static {
        route {{ prefix }} {
            discard;
            install;
            readvertise;
            active;
        }
    }
}

